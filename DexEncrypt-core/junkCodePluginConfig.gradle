apply plugin: 'junk-code'

static def randomStr(){
    def characters = ('abcdefghijklmnopqrstuvwxyz' as CharSequence)
    def randomString = ""
    def random = new Random()
    def len = random.nextInt(3) + 3

    while (randomString.length() < len) {
        randomString += characters[random.nextInt(characters.size())]
    }

    return randomString
}

androidJunkCode {
    def random = new Random()

    def config = {
//变体名称，如果没有设置productFlavors就是buildType名称，如果有设置productFlavors就是flavor+buildType，例如（freeRelease、proRelease）
        packageBase = "com.${randomStr()}.${randomStr()}.${randomStr()}"  //生成java类根包名
        packageCount = random.nextInt(6) + 5 //生成包数量
        activityCountPerPackage = random.nextInt(3) + 2 //每个包下生成Activity类数量
        excludeActivityJavaFile = false //是否排除生成Activity的Java文件,默认false(layout和写入AndroidManifest.xml还会执行)，主要用于处理类似神策全埋点编译过慢问题
        otherCountPerPackage = random.nextInt(3) + 2  //每个包下生成其它类的数量
        methodCountPerClass = random.nextInt(5) + 3  //每个类下生成方法数量
        fieldCount = random.nextInt(5) + 3 //每个类下生成的变量数
        resPrefix = "${randomStr()}_"  //生成的layout、drawable、string等资源名前缀
        drawableCount = 1  //生成drawable资源数量
        stringCount = 1  //生成string数量
    }
    variantConfig {
        debug config
        release config
    }
}